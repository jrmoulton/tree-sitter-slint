
export MainWindow := Window {
    title: "Memory Game - Slint Demo";

    callback check-if-pair-solved();
    property <bool> disable-tiles: true;

    property<length> tile-size: 80px;
    property<length> tile-spacing: 10px;

    width: root.check-if-pair-solved();

    property <int> row-count: 4;
    property <int> column-count: 4;

    // "column_count + 1" and "row_count + 1" are the number of gaps between the tiles.
    width: (column-count * tile-size) + ((column-count + 1) * tile-spacing);
    height: (row-count * tile-size) + ((row-count + 1) * tile-spacing);

    property<[TileData]> memory-tiles : [
        { image: @image-url("icons/at.png") },
        { image: @image-url("icons/balance-scale.png") },
        { image: @image-url("icons/bicycle.png") },
        { image: @image-url("icons/bus.png") },
        { image: @image-url("icons/cloud.png") },
        { image: @image-url("icons/cogs.png") },
        { image: @image-url("icons/motorcycle.png") },
        { image: @image-url("icons/video.png") },
    ];

    for tile[i] in memory-tiles: MemoryTile {
        x: tile-spacing + mod(i, column-count) * (tile-size + tile-spacing);
        y: tile-spacing + floor(i / row-count) * (tile-size + tile-spacing);
        width: tile-size;
        height: tile-size;

        icon: tile.image.tile;

        open-curtain: tile.image-visible || tile.solved;
        solved: tile.solved;

        clicked => {
            if (!root.disable-tiles) {
                tile.image-visible = !tile.image-visible;
                root.check-if-pair-solved();
            }
        }
    }
}



